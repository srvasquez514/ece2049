#include <msp430.h>
#include "peripherals.h"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Function Prototypes
void swDelay(int numLoops);
void StartUp();
void countdown();
void playseq();

//Global Variables
int state = 0;
int rounds = 0;
int array = [4];

#define MAX_ROUNDS 10
#define RAND_MAX    4



void main(void){
    unsigned char currKey=0, dispSz = 3;
      unsigned char dispThree[3];

      WDTCTL = WDTPW | WDTHOLD;

      // Useful code starts here
       initLeds();
       configDisplay();
       configKeypad();

       // *** Intro Screen ***
        Graphics_clearDisplay(&g_sContext); // Clear the display

        while(1) ///Forever loop
        {
            unsigned char currKey = getKey();
            switch(state){
            case 0:
                StartUp();
                break;
            case 1:
                countdown();
                break;
            case 2:
                playseq();
                break;

            }
            if (currKey == '*')
                state = 1;
        } //ends while loop
}

        void StartUp() {

            Graphics_drawStringCentered(&g_sContext, "ECE2049 SIMON Game", AUTO_STRING_LENGTH, 64, 25, TRANSPARENT_TEXT);
            Graphics_drawStringCentered(&g_sContext, "Press * to start", AUTO_STRING_LENGTH, 64, 45, TRANSPARENT_TEXT);
            Graphics_flushBuffer(&g_sContext);
        }

        void countdown() {
            Graphics_clearDisplay(&g_sContext);
            Graphics_drawStringCentered(&g_sContext, "Count down to Game:", AUTO_STRING_LENGTH, 64, 25, TRANSPARENT_TEXT);
            Graphics_flushBuffer(&g_sContext);
            swDelay(10);

            Graphics_clearDisplay(&g_sContext);
            Graphics_drawStringCentered(&g_sContext, "3", AUTO_STRING_LENGTH, 40, 25, TRANSPARENT_TEXT);
            Graphics_flushBuffer(&g_sContext);
            swDelay(10);

            Graphics_clearDisplay(&g_sContext);
            Graphics_drawStringCentered(&g_sContext, "2", AUTO_STRING_LENGTH, 40, 25, TRANSPARENT_TEXT);
            Graphics_flushBuffer(&g_sContext);
            swDelay(10);

            Graphics_clearDisplay(&g_sContext);
            Graphics_drawStringCentered(&g_sContext, "1", AUTO_STRING_LENGTH, 40, 25, TRANSPARENT_TEXT);
            Graphics_flushBuffer(&g_sContext);
            swDelay(10);
            state = 2
        }

        void playseq()
        {
            unsigned int delay = 10;
            int k;
            for (k = 0, k < MAX_ROUNDS, k++){
            int randnum;
            randnum = rand();
            printf(" %d" , randnum);
            array[0] = randnum;
            if {
                randnum = 0;
                randnum = rand();
                printf(" %d" , randnum);
                array[0] = randnum;
            }
            
            
            }
           
            

        }
        void swDelay(int numLoops)
        {

            volatile unsigned int i,j;  // volatile to prevent removal in optimization
                                        // by compiler. Functionally this is useless code

            for (j=0; j<numLoops; j++)
            {
                i = 50000 ;                 // SW Delay
                while (i > 0)               // could also have used while (i)
                   i--;
            }
        }
